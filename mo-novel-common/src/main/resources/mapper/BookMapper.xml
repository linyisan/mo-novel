<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.heng.mapper.BookMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.heng.entity.Book">
        <id column="id" property="id" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="title" property="title" />
        <result column="author_name" property="authorName" />
        <result column="channel" property="channel" />
        <result column="category_id" property="categoryId" />
        <result column="introduction" property="introduction" />
        <result column="cover" property="cover" />
        <result column="status" property="status" />
        <result column="word_count" property="wordCount" />
        <result column="visit_count" property="visitCount" />
        <result column="comment_count" property="commentCount" />
        <result column="score" property="score" />
<!--        <association property="category" column="category_id"
                     select="com.heng.mapper.CategoryMapper.selectById"/>-->
        <association property="lastBookIndex" column="id"
                     select="com.heng.mapper.BookIndexMapper.selectLastBookIndex"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, create_time, update_time, title, author_name, channel, category_id, introduction, cover, status, word_count, visit_count, comment_count, score
    </sql>

    <!--<select id="searchByPage" parameterType="com.heng.vo.BookQueryVo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from t_book where word_count > 0
        <if test="keyword != null and keyword != ''">
            and (book_name like concat('%',#{keyword},'%') or author_name like concat('%',#{keyword},'%'))
        </if>
        <if test="channel != null">
            and channel = #{channel}
        </if>
        <if test="categoryId != null">
            and category_id = #{categoryId}
        </if>
        <if test="bookStatus != null">
            and status = #{bookStatus}
        </if>
        <if test="wordCountMin != null">
            and word_count >= #{wordCountMin}
        </if>
        <if test="wordCountMax != null">
            and word_count <![CDATA[ < ]]> #{wordCountMax}
        </if>
        <if test="updateTimeMin != null">
            and update_time >= #{updateTimeMin}
        </if>

    </select>-->

    <select id="selectByScoreAndRandom" parameterType="int" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `t_book`
        ORDER BY score DESC, RAND()
        LIMIT #{limit}
    </select>
    <select id="selectByVisitCountAndAndRandom" resultType="com.heng.entity.Book">
        SELECT
        <include refid="Base_Column_List"/>
        FROM `t_book`
        <where>
            status > 0
            <if test="categoryIds!= null and categoryIds.size()>0">
                AND category_id IN
                <foreach collection="categoryIds" index="index" item="item" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY visit_count DESC, RAND()
        LIMIT #{limit}
    </select>
    <select id="selectGroupByCategory" resultType="com.heng.dto.CategoryCountDO">
        SELECT category_id, count(*) AS count
        FROM `t_book`
        GROUP BY category_id
    </select>
</mapper>
